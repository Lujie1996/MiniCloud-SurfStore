# Your paper summary goes here:

PID: A12345678

Lorem ipsum dolor sit amet, consectetur adipiscing elit...

# If in a group of two, put the second paper summary here:

PID: A53274311
Name: Jie Lu

This paper is an early important exploration of specifically how the distributed systems cooperate and communicate with each other. It gives a broad view of how RPC functions and how to implement the critical features of RPC such as binging, transferring data and adaption between client and server. The first half of paper is most important for presenting the RPC working mechanism, and the second half focuses on the reliable, secure and efficient communication between machines. 

The paper first explained their decision of choosing procedure call as the paradigm for expressing control and data transfers. Their consideration was mainly that the language they were using at that time used procedures to control and transfer data. Then the User, User-stub, RPCRuntime, Server-stub, and Server model is given. The RPC functions transparently to User that a RPC affects the work flow of user machine just like triggering a local procedure call. For binding, they proposed a mechanism based on a third machine called Grapevine which was an essential component in network back at that time. The callee first registers its network information and the procedure it is providing as a database entry in Grapevine server. When users want to find the server machine, it first needs to contact the Grapevine and ask to look up for the network information of the server where the procedure resides. After all of the communication with Grapevine can the user actually request a RPC on server. This is actually violating the principle of network decentralization. Today there is no such server that essentially resides in network like Grapevine, and both ends of RPC is by no means requiring a third machine in order to  route or locate each other.

In communication protocol level, the proposed new protocol is said to be unlike other protocols and could offer substantial performance gains based on the present features of RPC. Since most of transfer is likely to be function arguments, which is generally small chunk of data, yet they can be very frequent, the protocol works as a light-weight protocol as it does not have connection establishment and maintenance. To realize reliable transmission, both packet ACK on the fly and explicit ACK are used to satisfy different traffic conditions. Also the transmitter is responsible for the transmission, and it could send explicit request for ACK from server and periodically sends a probe packet to server and receives response ACK while waiting for RPC result. Together with timeout mechanism, the user detects the possible network failures. For security, the protocol again makes use of the Grapevine as authentication center and helps to achieve the end-to-end encryption of transfer of both argument and procedure results.

Lorem ipsum dolor sit amet, consectetur adipiscing elit...
